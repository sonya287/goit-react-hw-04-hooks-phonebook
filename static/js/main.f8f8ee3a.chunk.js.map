{"version":3,"sources":["components/Container/Container.module.css","components/FormContacts/FormContacts.module.css","components/Container/Container.js","components/FormContacts/FormContacts.js","components/ListContacts/ListContacts.js","components/Filter/Filter.js","App.js","index.js","components/ListContacts/ListContacts.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Container","children","className","styles","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","resetForm","Form","preventDefault","Label","Input","type","pattern","title","required","onChange","placeholder","Button","ListContactsItem","id","onDelete","Item","Text","Span","onClick","ListContacts","contacts","length","List","map","contact","key","Filter","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","window","setItem","stringify","uuidv4","find","toLowerCase","alert","trim","test","prevContacts","normalizedFilter","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,UAAY,+B,uCCA9BD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,MAAQ,4BAA4B,OAAS,+B,mHCUtHC,MARf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAOH,UAAvB,SAAmCC,K,gBCuE7BG,MAvEf,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAMC,cAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,SAUAC,EAAY,WAChBP,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMR,UAAWC,IAAOa,KAAMX,SAZX,SAACO,GACpBA,EAAMK,iBACNZ,EAASE,EAAME,GACfM,KASA,UACE,wBAAOb,UAAWC,IAAOe,MAAzB,iBAEE,uBACEhB,UAAWC,IAAOgB,MAClBC,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRT,MAAOP,EACPiB,SAAUb,EACVc,YAAY,mBAGhB,wBAAOvB,UAAWC,IAAOe,MAAzB,mBAEE,uBACEhB,UAAWC,IAAOgB,MAClBC,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUb,EACVG,MAAOL,EACPgB,YAAY,iBAGhB,wBAAQvB,UAAWC,IAAOuB,OAAQN,KAAK,SAAvC,6B,uBC5DAO,EAAmB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,GAAIrB,EAA6B,EAA7BA,KAAME,EAAuB,EAAvBA,OAAQoB,EAAe,EAAfA,SAC5C,OACE,qBAAI3B,UAAWC,IAAO2B,KAAtB,UACE,oBAAG5B,UAAWC,IAAO4B,KAArB,UACGxB,EADH,KACU,sBAAML,UAAWC,IAAO6B,KAAxB,SAA+BvB,OAEzC,wBACEP,UAAWC,IAAOuB,OAClBN,KAAK,SACLa,QAAS,kBAAMJ,EAASD,IACxBN,MAAM,6CAJR,wBAkCSY,EAtBM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUN,EAAe,EAAfA,SAChC,OAAwB,IAApBM,EAASC,OAAqB,KAEhC,oBAAIlC,UAAWC,IAAOkC,KAAtB,SACGF,EAASG,KAAI,SAACC,GAAD,OACZ,wBAAC,EAAD,2BAAsBA,GAAtB,IAA+BV,SAAUA,EAAUW,IAAKD,EAAQX,Y,gBCAzDa,EAvBA,SAAC,GAAyB,IAAvB3B,EAAsB,EAAtBA,MAAOU,EAAe,EAAfA,SACvB,OACE,wBAAOtB,UAAWC,IAAOe,MAAzB,kCAEE,uBACEE,KAAK,OACLb,KAAK,SACLL,UAAWC,IAAOgB,MAClBL,MAAOA,EACPU,SAAUA,EACVH,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,Q,QC2DDmB,MApEf,WACE,MAAgCpC,oBAAS,WAAO,IAAD,EAC7C,iBAAOqC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAvC,QAAuD,MADzD,mBAAOX,EAAP,KAAiBY,EAAjB,KAIA,EAA4BzC,mBAAS,IAArC,mBAAO0C,EAAP,KAAeC,EAAf,KA6CA,OA3CAC,qBAAU,WACRC,OAAON,aAAaO,QAAQ,WAAYT,KAAKU,UAAUlB,MACtD,CAACA,IA0CF,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAa9B,SA1CQ,SAACE,EAAME,GAC9B,IAAM8B,EAAU,CACdX,GAAI0B,cACJ/C,OACAE,UAIA0B,EAASoB,MACP,SAAChB,GAAD,OAAaA,EAAQhC,KAAKiD,gBAAkBjD,EAAKiD,iBAGnDC,MAAM,GAAD,OAAIlD,EAAJ,6BACI4B,EAASoB,MAAK,SAAChB,GAAD,OAAaA,EAAQ9B,SAAWA,KACvDgD,MAAM,GAAD,OAAIhD,EAAJ,6BACKF,EAAKmD,QAAWjD,EAAOiD,OAEvB,yBAAyBC,KAAKlD,GAGxCsC,GAAY,SAACa,GAAD,4BAAsBA,GAAtB,CAAoCrB,OAFhDkB,MAAM,mCAFNA,MAAM,iDA2BN,0CACCtB,EAASC,OAAS,GAAK,cAAC,EAAD,CAAQtB,MAAOkC,EAAQxB,SAhB9B,SAACZ,GACpBqC,EAAUrC,EAAMC,cAAcC,UAgB3BqB,EAASC,OAAS,EACjB,cAAC,EAAD,CACED,SAfmB,WACzB,IAAM0B,EAAmBb,EAAOQ,cAChC,OAAOrB,EAASa,QAAO,SAACT,GAAD,OACrBA,EAAQhC,KAAKiD,cAAcM,SAASD,MAYtBE,GACVlC,SAxBoB,SAACmC,GAC3BjB,EAAYZ,EAASa,QAAO,qBAAGpB,KAAgBoC,SA0B3C,iF,YC/DRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BvE,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,2BAA2B,KAAO,2BAA2B,KAAO,2BAA2B,OAAS,+B,kBCAnKD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.f8f8ee3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3ANbq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormContacts_Form__2W8Xr\",\"Label\":\"FormContacts_Label__a9cNe\",\"Input\":\"FormContacts_Input__1wsjF\",\"Button\":\"FormContacts_Button__2O17c\"};","import PropTypes from \"prop-types\";\r\nimport styles from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={styles.Container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FormContacts.module.css\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onSubmit(name, number);\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={styles.Form} onSubmit={handleSubmit}>\r\n      <label className={styles.Label}>\r\n        Name\r\n        <input\r\n          className={styles.Input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          placeholder=\"Ivan Ivanov\"\r\n        />\r\n      </label>\r\n      <label className={styles.Label}>\r\n        Number\r\n        <input\r\n          className={styles.Input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={number}\r\n          placeholder=\"111-11-11\"\r\n        />\r\n      </label>\r\n      <button className={styles.Button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ListContacts.module.css\";\r\n\r\nconst ListContactsItem = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <li className={styles.Item}>\r\n      <p className={styles.Text}>\r\n        {name}: <span className={styles.Span}>{number}</span>\r\n      </p>\r\n      <button\r\n        className={styles.Button}\r\n        type=\"button\"\r\n        onClick={() => onDelete(id)}\r\n        title=\"Удалить\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ListContacts = ({ contacts, onDelete }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul className={styles.List}>\r\n      {contacts.map((contact) => (\r\n        <ListContactsItem {...contact} onDelete={onDelete} key={contact.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ListContacts;","import PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.Label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        className={styles.Input}\r\n        value={value}\r\n        onChange={onChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"./components/Container\";\r\nimport ContactForm from \"./components/FormContacts\";\r\nimport ContactList from \"./components/ListContacts\";\r\nimport Filter from \"./components/Filter\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState(() => {\r\n    return JSON.parse(localStorage.getItem(\"contacts\")) ?? [];\r\n  });\r\n\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const handleAddContact = (name, number) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    if (\r\n      contacts.find(\r\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(`${name} is already in contacts.`);\r\n    } else if (contacts.find((contact) => contact.number === number)) {\r\n      alert(`${number} is already in contacts.`);\r\n    } else if (!name.trim() || !number.trim()) {\r\n      alert(\"Enter the contact's name and number phone!\");\r\n    } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\r\n      alert(\"Enter the correct number phone!\");\r\n    } else {\r\n      setContacts((prevContacts) => [...prevContacts, contact]);\r\n    }\r\n  };\r\n\r\n  const handleDeleteContact = (contactId) => {\r\n    setContacts(contacts.filter(({ id }) => id !== contactId));\r\n  };\r\n\r\n  const changeFilter = (event) => {\r\n    setFilter(event.currentTarget.value);\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={handleAddContact} />\r\n      <h2>Contacts</h2>\r\n      {contacts.length > 1 && <Filter value={filter} onChange={changeFilter} />}\r\n      {contacts.length > 0 ? (\r\n        <ContactList\r\n          contacts={getVisibleContacts()}\r\n          onDelete={handleDeleteContact}\r\n        />\r\n      ) : (\r\n        <p>Your phonebook is empty. Please add contact.</p>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ListContacts_List__2fhQu\",\"Item\":\"ListContacts_Item__2L-62\",\"Text\":\"ListContacts_Text__2BQIR\",\"Span\":\"ListContacts_Span___KVnI\",\"Button\":\"ListContacts_Button__3gTj4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__1IFpg\",\"Input\":\"Filter_Input__3BHzl\"};"],"sourceRoot":""}